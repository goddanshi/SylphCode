<?php

namespace app\controllers;

use Yii;
use yii\web\Controller;
use yii\web\Response;
use yii\httpclient\Client;
use app\models\Request;


class SiteController extends Controller
{
    /**
     * Displays homepage.
     *
     * @return string
     */
    public function actionIndex()
    {
        return $this->render('index');
    }

public function actionContacts()
{
    return $this->render('contacts'); // –∏—â–µ—Ç —Ñ–∞–π–ª views/site/contacts.php
}
public function actionWebdev()
{
    return $this->render('webdev'); 
}
public function actionPodderzhkaSaytov()
{
    return $this->render('podderzhka-saytov');
}
public function actionFrontendDev()
{
    return $this->render('frontend-dev');
}
public function actionBackendDev()
{
    return $this->render('backend-dev');
}
public function actionPriceList()
{
    return $this->render('price-list');
}
public function actionFaq()
{
    return $this->render('faq');
}
public function actionCase()
{
    return $this->render('case');
}
public function actionBlog()
{
    return $this->render('blog');
}
 public function actionRequestConsultation()
    {
        $model = new Request();
        $model->phone = Yii::$app->request->post('phone');
        $model->user_id = Yii::$app->user->id ?? null; // –µ—Å–ª–∏ —é–∑–µ—Ä –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –º–æ–∂–Ω–æ null

        if ($model->save()) {
            Yii::$app->session->setFlash('success', '–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.');

            $token = Yii::$app->params['telegram_bot_token'];
            $chat_id = Yii::$app->params['telegram_chat_id'];
            $text = "üìû –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:\n–¢–µ–ª–µ—Ñ–æ–Ω: {$model->phone}\n";
            if ($model->user_id) {
                $text .= "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {$model->user_id}\n";
            }
            $text .= "–î–∞—Ç–∞: " . date('d.m.Y H:i');

            $url = "https://api.telegram.org/bot{$token}/sendMessage?" . http_build_query([
                'chat_id' => $chat_id,
                'text' => $text,
                'parse_mode' => 'HTML',
            ]);

            @file_get_contents($url);
        } else {
            Yii::$app->session->setFlash('error', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }

        return $this->goBack();
    }
public function actionRedirectDashboard()
{
    // –Ø–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if (Yii::$app->user->isGuest || !Yii::$app->user->identity) {
        return $this->redirect(['/auth/login']);
    }

    $user = Yii::$app->user->identity;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–µ—Ç–æ–¥ isAdmin (–∏ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ)
    if (method_exists($user, 'isAdmin') && $user->isAdmin()) {
        return $this->redirect(['/admin/dashboard']);
    }

    return $this->redirect(['/user/dashboard']);
}
public function actionDbTest()
{
    try {
        $db = Yii::$app->db;
        $command = $db->createCommand('SELECT 1');
        $result = $command->queryScalar();
        return 'OK: ' . $result;
    } catch (\yii\db\Exception $e) {
        return 'DB error: ' . $e->getMessage();
    }
}

public function actionError()
    {
        $exception = Yii::$app->errorHandler->exception;
        if ($exception !== null) {
            return $this->render('error', ['exception' => $exception]);
        }
        return '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.';
    }
    
}
